
#
# Build rules for Linux/x86 (Little Endian) with PLI support

include ${SDK}/mk/Makefile.linuxuser-common

# When using GDB on Linux, you may want to use "setenv GDB 1" to disable
# editline.  For best results put "set environment GDB 1" in your .gdbinit.

# Linux-specific Configuration Flags



ifeq ($(filter-out Linux Darwin,$(uname)),)
  ifeq ($(shell uname -m),x86_64)
  CFGFLAGS += -DBCM_PLATFORM_STRING=\"linuxuser.defaultx86_64\"
  else
  CFGFLAGS += -DBCM_PLATFORM_STRING=\"linuxuser.default\"
  endif
endif


CC       = $(CROSS_COMPILE)gcc
CXX      = $(CROSS_COMPILE)g++
LD       = $(CROSS_COMPILE)ld
AR       = $(CROSS_COMPILE)ar
ARFLAG   = -rc
STRIP    = $(CROSS_COMPILE)strip
RANLIB   = $(CROSS_COMPILE)ranlib

# Notes on AMD Athlon 64-bit
#
# Compiles on x86_64 default to 32-bit emulation unless 64-bit mode
# is specifically requested in Make.var by uncommenting the two defines
# for PTRS_ARE_64BITS and LONGS_ARE_64BITS.
#
# Note that the code base will compile in 64-bit mode, but will not run
# correctly because malloc() can return values >32 bits and the PLISIM
# protocol only supports 32-bit addresses.

ifeq (,$(CROSS_COMPILE))
ifeq ($(shell uname -m),x86_64)
 ifeq (,$(findstring -DPTRS_ARE_64BITS,$(CFGFLAGS)))
  CC = ${CC} -m32
  CXX =${CXX} -m32
 endif
endif
endif


# Linux
LIBS= -lpthread -lm -lrt

# For GCC 4.2.x, add -Wno-address
GCC_MAJOR_VER  = $(shell echo |$(CC) -dM -E -| grep __GNUC__ | cut -d' ' -f3)
GCC_MINOR_VER  = $(shell echo |$(CC) -dM -E -| grep __GNUC_MINOR__ | cut -d' ' -f3)
ifeq (${GCC_MAJOR_VER}, 4)
ifeq (${GCC_MINOR_VER}, 2)
BCM_EXTRA_CC_CFLAGS   = -Wno-address
endif
endif
