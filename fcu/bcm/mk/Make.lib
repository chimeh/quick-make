
#
# Make rules/targets for handling libraries

.SECONDARY:: ${BOBJS}

BOBJS_MAKE_CMD =

ifeq ($(LINUX_MAKE_SHARED_LIB),1)
LIBSUFFIX=so.${SHAREDLIBVER}

targetlibsoname = ${lib}.${LIBSUFFIX}
targetlibrealname = ${targetlibsoname}
targetlib = ${LIBDIR}/${targetlibrealname}

${targetlib}: ${BOBJS}
	$(BOBJS_MAKE_CMD)
	$(RM) $@
	$(CC) -shared -Wl,-soname,${targetlibsoname} -o ${targetlib} ${BOBJS} -lc

all:: ${BLDDIR}/.tree ${targetlib}

install:: all

clean::
	$(RM) ${BOBJS}
	$(RM) ${targetlib}
else # LINUX_MAKE_SHARED_LIB != 1

LIBSUFFIX=a

targetlib = ${LIBDIR}/${lib}.${LIBSUFFIX}

all:: ${BLDDIR}/.tree ${targetlib}


${LIBDIR}/%.a: ${BOBJS}
	$(BOBJS_MAKE_CMD)
ifdef QUIET
	@$(ECHO) "ARLIB   lib $(notdir $@)"
endif
	$Q$(RM) $@
	$Q$(AR) ${ARFLAGS} $@ $(sort ${BOBJS})

$(targetlib): ${BOBJS}
	$(BOBJS_MAKE_CMD)
ifdef QUIET
	@$(ECHO) "ARLIB   LIB $(notdir $@)"
endif
	$Q$(RM) $@
	$Q$(AR) ${ARFLAGS} $@ $(sort ${BOBJS})


install:: all

clean::
ifdef QUIET
	$Q$(ECHO) "ClEAN    OBJS ${LOCALDIR}"
endif
	$Q$(RM) ${BOBJS}
	$Q$(RM) ${targetlib}
endif # LINUX_MAKE_SHARED_LIB

distclean:: clean
