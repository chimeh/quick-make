# Default kernel source directory
ifeq (,$(KERNDIR))
KERNDIR := /lib/modules/$(shell uname -r)/build
export KERNDIR
endif

# Default Linux include directory
ifeq (,$(LINUX_INCLUDE))
LINUX_INCLUDE := $(KERNDIR)/include
endif
# Default architecture
ifeq (,$(ARCH))
SUBARCH := $(shell uname -m | sed -e s/i.86/x86/ -e s/x86_64/x86/ \
                                  -e s/sun4u/sparc64/ \
                                  -e s/arm.*/arm/ -e s/sa110/arm/ \
                                  -e s/s390x/s390/ -e s/parisc64/parisc/ \
                                  -e s/ppc.*/powerpc/ -e s/mips.*/mips/ \
                                  -e s/sh[234].*/sh/ -e s/aarch64.*/arm64/ )
ARCH ?= $(SUBARCH)
endif

# By default we exclude -Werror from x86 kernel builds
CFGFLAGS += -Wall
CFGFLAGS += -I$(SDK)/app/linuxkern/include \
	    -I$(LINUX_INCLUDE) \
	    -I$(LINUX_INCLUDE)/asm/gcc \
	    -I$(LINUX_INCLUDE)/asm/mach-generic \
        -I$(KERNDIR)/arch/$(ARCH)



# Noisy kernel build
KBUILD_VERBOSE = 1

export ARCH KBUILD_VERBOSE KERNDIR


# autoconf.h was moved in later kernels
AUTOCONF = $(KERNDIR)/include/generated/autoconf.h
ifeq (,$(shell ls $(AUTOCONF) 2>/dev/null))
AUTOCONF = $(KERNDIR)/include/linux/autoconf.h
endif

# gcc system include path
SYSINC = $(shell gcc -print-search-dirs | grep install | cut -c 10-)include

ifeq (,$(KFLAGS))
KFLAGS := -nostdinc -isystem $(SYSINC) -I$(KERNDIR)/include -I$(KERNDIR)/arch/x86/include \
  -include $(AUTOCONF) \
  -m64 -D__KERNEL__ \
  -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common \
  -maccumulate-outgoing-args -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 \
  -fomit-frame-pointer \
  -fno-stack-protector -Wdeclaration-after-statement -Wno-pointer-sign \
  -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks \
  -Os -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow \
  -mtune=generic -mno-red-zone -mcmodel=kernel -funit-at-a-time 
endif


# Extra variables.
EXTRA_CFLAGS = -D"KBUILD_STR(s)=\#s" $(basename_flags) $(modname_flags)

comma = ,
basetarget = $(basename $(notdir $@))
modname = $(basetarget)

name-fix = $(subst $(comma),_,$(subst -,_,$1))
basename_flags = -D"KBUILD_BASENAME=KBUILD_STR($(call name-fix,$(basetarget)))"
modname_flags  = $(if $(filter 1,$(words $(modname))),\
-D"KBUILD_MODNAME=KBUILD_STR($(call name-fix,$(modname)))")

STD_CFLAGS += $(KFLAGS)

