
#
# This file contains the platform-independent portion of the Makefiles
# for Unix compilation.
#

#
# TARGETTYPE Defines: This defines the type of system you are compiling
# the driver for.  New values can be created by porting the code to your
# platform and adding the define in this Makefile.
# 

TARGETTYPE = PLISIM

# Configuration Variable
# OSType Defines: This defines the type of RTOS or microkernel which you
# are compiling the SAL (and its associated driver) for.  New platforms
# can be created by porting the code to your platform and changing the
# define in this Makefile.

OSTYPE = LINUX

#
# ORIGIN is used to Optionally select different CFLAGS. It is used to import
# source from other vendors. If SOURCE=Broadcom, then the BCM_ flags are added
# to those passed to the compiler. If SOURCE != Broadcom, BCM_ flags are NOT
# added.
#
# Default specifies Broadcom
#
ifndef ORIGIN
	ORIGIN = Broadcom
endif

#
# STD_{C|CPP|CXX}FLAGS - Standard flags used by ALL compilations
# BCM_{C|CPP|CXX}FLAGS - Flags used for Broadcom source files
# OPT_{C|CPP|CXX}FLAGS - Defined in local make files BEFORE inclusion of 
#			 this Makefile, to define local "Extra" flags.
#
STD_CFLAGS = -D_REENTRANT -D${TARGETTYPE} -D${OSTYPE} ${CFGFLAGS} \
    ${ENDIAN_DEF}
STD_CPPFLAGS = ${STD_CFLAGS}
STD_CXXFLAGS = ${STD_CFLAGS}

BCM_CFLAGS   = -Wall  ${BCM_EXTRA_CC_CFLAGS}

BCM_CPPFLAGS = ${BCM_CFLAGS}
BCM_CXXFLAGS = ${BCM_CFLAGS}

ifeq (${ORIGIN}, Broadcom)
	CFLAGS   += ${STD_CFLAGS}   ${BCM_CFLAGS}   ${OPT_CFLAGS}
	CPPFLAGS += ${STD_CPPFLAGS} ${BCM_CPPFLAGS} ${OPT_CPPFLAGS}
	CXXFLAGS += ${STD_CXXFLAGS} ${BCM_CXXFLAGS} ${OPT_CXXFLAGS}
else
	CFLAGS   += ${STD_CFLAGS}   ${OPT_CFLAGS}
	CPPFLAGS += ${STD_CPPFLAGS} ${OPT_CPPFLAGS}
	CXXFLAGS += ${STD_CXXFLAGS} ${OPT_CXXFLAGS}
endif

#
# Add flags required for running on unix.
#

LDFLAGS += ${LIBS}

#
# DEPEND is used as a command to generate the list of dependencies.
# The format of the output must be 
#	"file.o : file.c a/b/c.h d/e/f.h ...", 
# if it is on multiple lines, each line must end in a backslash. 
# The output MUST be on standard out.
#
DEPEND = ${CC} -M -P $(CFLAGS) $< 

# Linux
LIBS= -lnsl -lpthread -lm -lrt

# For GCC 4.2.x, add -Wno-address
GCC_MAJOR_VER  = $(shell echo |$(CC) -dM -E -| grep __GNUC__ | cut -d' ' -f3)
GCC_MINOR_VER  = $(shell echo |$(CC) -dM -E -| grep __GNUC_MINOR__ | cut -d' ' -f3)
ifeq (${GCC_MAJOR_VER}, 4)
ifeq (${GCC_MINOR_VER}, 2)
BCM_EXTRA_CC_CFLAGS   = -Wno-address
endif
endif
