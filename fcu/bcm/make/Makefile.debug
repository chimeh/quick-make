# date: 2015-10-13
# author: huangjimin
#
# debug makefile#
#############################################################################
#############################################################################
# Expands to a list of the names of all global variables defined so far.
# into VAR = xx form, for debug makefile
# ref GNU make manual 
#define addone_var
#MY_ALL_VAR += \n\n\e[1;33m$(1)\e[m\t\t= $$($(1))
#endef
#$(foreach V,$(.VARIABLES),$(eval $(call addone_var,$(V))))


# 调试本Makefile，打印本Makefile执行时各变量的值
debug_makefile_allvalue_expand:
	@$(if true, \
			$(foreach v, $(wordlist 1, 100, $(filter-out DEPS_SED DEPS_CMD KERNEL_RULE do new_rule,$(sort $(.VARIABLES)))), \
			$(eval MM_VV :=$(value $(v))) echo -e '\e[1;33m$(v)\e[m=$(MM_VV)';) \
			echo '')
	@$(if true, \
			$(foreach v, $(wordlist 101, 150, $(filter-out DEPS_SED DEPS_CMD KERNEL_RULE do new_rule,$(sort $(.VARIABLES)))), \
			$(eval MM_VV :=$(value $(v))) echo -e '\e[1;33m$(v)\e[m=$(MM_VV)';) \
			echo '')
	@$(if true, \
			$(foreach v, $(wordlist 151, 170, $(filter-out DEPS_SED DEPS_CMD KERNEL_RULE do new_rule,$(sort $(.VARIABLES)))), \
			$(eval MM_VV :=$(value $(v))) echo -e '\e[1;33m$(v)\e[m=$(MM_VV)';) \
			echo '')
	@$(if true, \
			$(foreach v, $(wordlist 201, 300, $(filter-out DEPS_SED DEPS_CMD KERNEL_RULE do new_rule,$(sort $(.VARIABLES)))), \
			$(eval MM_VV :=$(value $(v))) echo -e '\e[1;33m$(v)\e[m=$(MM_VV)';) \
			echo '')
	@$(if true, \
			$(foreach v, $(wordlist 301, 400, $(filter-out DEPS_SED DEPS_CMD KERNEL_RULE do new_rule,$(sort $(.VARIABLES)))), \
			$(eval MM_VV :=$(value $(v))) echo -e '\e[1;33m$(v)\e[m=$(MM_VV)';) \
			echo '')
	@$(if true, \
			$(foreach v, $(wordlist 400, 500, $(filter-out DEPS_SED DEPS_CMD KERNEL_RULE do new_rule,$(sort $(.VARIABLES)))), \
			$(eval MM_VV :=$(value $(v))) echo -e '\e[1;33m$(v)\e[m=$(MM_VV)';) \
			echo '')
	@echo -e '\n\e[1;31m README:above are all the value of variables(include make builtin) when execute this Makefile \e[m'

debug_makefile_allvalue_notexpand:
	@$(if true, \
		$(foreach v, $(wordlist 1, 500, $(filter-out DEPS_SED DEPS_CMD KERNEL_RULE do new_rule, $(sort $(.VARIABLES)))), \
		/bin/echo -e '\e[1;33m$(v)\e[m=$(value $(v))';) \
		/bin/echo '')
	@echo -e '\n\e[1;31m README:above are all the value of variables(include make builtin) when execute this Makefile \e[m'


debug_makefile_varlist: 
	@echo -e '\n\e[1;33mthose are all variables:\e[m\n$(sort $(.VARIABLES))'
	@echo -e '\nTotal \e[1;33m$(words $(.VARIABLES)) \e[mvariables'

debug_makefile_onevar:
	@echo -e "exampe make DEBUG_MKVAR=CFLAG $@"
	$(eval MM_VV_ONE :=$(value $(DEBUG_MKVAR))) @echo -e "\e[1;33m$(DEBUG_MKVAR)\e[m=$(value $(DEBUG_MKVAR))\e[1;33m=\e[m$(MM_VV_ONE)"


PHONY: debug_makefile_onevar debug_makefile_varlist debug_makefile_allvalue_expand debug_makefile_allvalue_notexpand

